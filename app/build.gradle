apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    signingConfigs {
        release {
            storeFile file('kotlin-project.jks')
            storePassword 'android'
            keyPassword 'android'
            keyAlias = 'KotlinProject'
        }
    }
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.fuxj.kotlin.android"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            // 开启混淆
            minifyEnabled true
            // Zipalign压缩优化
            zipAlignEnabled true
            // 移除无用的资源文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            multiDexEnabled = true
            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        disable 'GoogleAppIndexingWarning'
        abortOnError false
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}"
    implementation 'androidx.core:core-ktx:1.1.0'
    
    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["constraintlayout"]
    implementation rootProject.ext.dependencies["recyclerview"]
    implementation rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]

    //view
    implementation(rootProject.ext.dependencies["butterknife"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-compat'
    }
    //view
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    //屏幕适配 今日头条 autoSize
    implementation rootProject.ext.dependencies["autosize"]
    //rx
    implementation rootProject.ext.dependencies["rxjava"]
    implementation(rootProject.ext.dependencies["rxandroid"]) {
        exclude module: 'rxjava'
    }
    implementation(rootProject.ext.dependencies["rxlifecycle"]) {
        exclude module: 'rxjava'
        exclude module: 'jsr305'
    }
    implementation(rootProject.ext.dependencies["rxlifecycle-android"]) {
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'rxlifecycle'
    }
    implementation(rootProject.ext.dependencies["rxlifecycle-components"]) {
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'rxlifecycle'
    }
    implementation(rootProject.ext.dependencies["rxpermissions"]) {
        exclude module: 'rxjava'
        exclude module: 'support-annotations'
    }
    implementation rootProject.ext.dependencies['rxerrorhandler']

    //network
    implementation(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    implementation(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    implementation(rootProject.ext.dependencies["retrofit-adapter-rxjava"]) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    implementation rootProject.ext.dependencies["okhttp3"]
    implementation rootProject.ext.dependencies["okhttp3-logging-interceptor"]

    compileOnly rootProject.ext.dependencies["glide"]
    annotationProcessor(rootProject.ext.dependencies["glide-compiler"]) {
        exclude module: 'jsr305'
    }
    //Gson
    implementation rootProject.ext.dependencies["gson"]
    //工具类
    implementation (rootProject.ext.dependencies["utilcodex"]){
        exclude module: 'gson'
    }
    //65536
    implementation rootProject.ext.dependencies["multidex"]
    //联动控件
    implementation rootProject.ext.dependencies["Android-PickerView"]
    //相机相册
    implementation (rootProject.ext.dependencies["takephoto-library"]){
        exclude group: 'com.github.bumptech.glide'
    }

    //状态栏
    implementation rootProject.ext.dependencies["immersionbar"]

    //test
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]

    //查看数据库信息
//    implementation rootProject.ext.dependencies["debug-db"]
    //greenDao 数据库
//    implementation rootProject.ext.dependencies["greendao"]
}
